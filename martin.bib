@article{10.1145/3409006,
author = {Parreaux, Lionel},
title = {The Simple Essence of Algebraic Subtyping: Principal Type Inference with Subtyping Made Easy (Functional Pearl)},
year = {2020},
issue_date = {August 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {ICFP},
url = {https://doi.org/10.1145/3409006},
doi = {10.1145/3409006},
abstract = {MLsub extends traditional Hindley-Milner type inference with subtyping while preserving compact principal types, an exciting new development. However, its specification in terms of biunification is difficult to understand, relying on the new concepts of bisubstitution and polar types, and making use of advanced notions from abstract algebra. In this paper, we show that these are in fact not essential to understanding the mechanisms at play in MLsub. We propose an alternative algorithm called Simple-sub, which can be implemented efficiently in under 500 lines of code (including parsing, simplification, and pretty-printing), looks more familiar, and is easier to understand.  We present an experimental evaluation of Simple-sub against MLsub on a million randomly-generated well-scoped expressions, showing that the two systems agree. The mutable automaton-based implementation of MLsub is quite far from its algebraic specification, leaving a lot of space for errors; in fact, our evaluation uncovered several bugs in it. We sketch more straightforward soundness and completeness arguments for Simple-sub, based on a syntactic specification of the type system.  This paper is meant to be light in formalism, rich in insights, and easy to consume for prospective designers of new type systems and programming languages. In particular, no abstract algebra is inflicted on readers.},
journal = {Proc. ACM Program. Lang.},
month = {aug},
articleno = {124},
numpages = {28},
keywords = {subtyping, type inference, principal types}
}

@inproceedings{PT98,
 author = {Pierce, Benjamin C. and Turner, David N.},
 title = {Local type inference},
 booktitle = {Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 series = {POPL '98},
 year = {1998},
 location = {San Diego, California, United States},
 pages = {252--265}
}

@article{OZZ01,
    author = "Martin Odersky and Matthias Zenger and Christoph Zenger",
    title = "Colored local type inference",
    journal = "Proc. 28th  ACM Symposium on Principles of Programming Languages",
    volume = "36",
    number = "3",
    pages = "41--53",
    year = "2001",
    xnote = "citeseer.ist.psu.edu/article/odersky01colored.html" }


@InProceedings{plue09_1,
  author = 	 {Martin Pl{\"u}micke},
  title = 	 {Java type unification with wildcards},
  booktitle = 	 {17th International Conference, INAP 2007, and 21st Workshop on Logic Programming, WLP 2007, W\"urzburg, Germany, October 4-6, 2007, Revised Selected Papers},
  year = 	 {2009},
  editor = 	 {Dietmar Seipel and Michael Hanus and Armin Wolf},
  Volume = 	 {5437},
  publisher =    {Springer-Verlag Heidelberg},
  pages =     {223--240},
  SERIES       = {Lecture Notes in Artificial Intelligence}
}

@article{DM82,
    author={Luis Damas and Robin Milner},
    title={Principal type-schemes for functional programs},
    journal={Proc. 9th Symposium on Principles of Programming Languages},
    year={1982}
}

@article{Rob65,
    author={J. A. Robinson},
    title={A Machine-Oriented Logic Based on the Resolution Principle},
    journal={Journal of ACM},
    volume={12(1)},
    pages={23-41},
    month=Jan,
    year={1965}}

@article{MM82,
    author={A. Martelli and U. Montanari},
    title={An Efficient Unification Algorithm},
    journal={ACM Transactions on Programming Languages and Systems},
    volume={4},
    pages={258-282},
    year={1982}}

@InProceedings{Plue07_3,
  author = 	 {Martin Pl{\"u}micke},
  title = 	 {Typeless {P}rogramming in \textsf{{J}ava 5.0} with {W}ildcards},
  booktitle = 	 {5th {I}nternational {C}onference on {P}rinciples and {P}ractices of {P}rogramming in {J}ava},
  pages = 	 {73--82},
  year = 	 {2007},
  editor = 	 {Vasco Amaral and Lu\'is Veiga and Lu\'is Marcelino and H. Conrad Cunningham},
  series = 	 {ACM International Conference Proceeding Series},
  volume = 	 {272},
  month = 	 {September}
}

@inproceedings{plue15_2,
  author    = {Martin Pl{\"{u}}micke},
  title     = {More Type Inference in {J}ava 8},
  booktitle = {Perspectives of System Informatics - 9th International Ershov Informatics
               Conference, {PSI} 2014, St. Petersburg, Russia, June 24-27, 2014.
               Revised Selected Papers},
  editor    = {Andrei Voronkov and Irina Virbitskaite},
  volume = 	 {8974},
  series    = {Lecture Notes in Computer Science},
  pages     = {248--256},
  year      = {2015},
  publisher = {Springer}
}

@phdthesis{GS89,
    author = "Gert Smolka",
    title = "Logic Programming over Polymorphically Order-Sorted Types",
    school = {Department Informatik, University of Kaisers\-lautern},
    address = {Kaiserslautern, Germany},
    month = may,
    year = 1989
}

@Article{MH91,
  author = 	 "Michael Hanus",
  title = 	 "Parametric order-sorted types in logic programming",
  journal = 	 "Proc. TAPSOFT 1991",
  year = 	 "1991",
  volume = 	 "LNCS",
  number = 	 "394",
  pages = 	 "181--200"
}

@inproceedings{CB95,
    author = "Christoph Beierle",
    title = "Type Inferencing for Polymorphic Order-Sorted Logic Programs",
    booktitle = "International Conference on Logic Programming",
    pages = "765-779",
    year = "1995",
    OPturl = "citeseer.ist.psu.edu/beierle95type.html" }

@incollection{HiTo92,
  author    = {Patricia M. Hill and Rodney W. Topor},
  editor    = {Frank Pfenning},
  title     = {A {S}emantics for {T}yped {L}ogic {P}rograms},
  booktitle = {Types in Logic Programming},
  year      = {1992},
  pages     = {1-62},
  publisher = {MIT Press},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@inproceedings{TEP05,
  author = 	 "Torgersen, Mads and Ernst, Erik and
                  Hansen, Christian Plesner",
  title = 	 "Wild {F}{J}",
  booktitle = 	 "Proceedings of FOOL 12",
  year = 	 2005,
  editor = 	 "Wadler, Philip",
  address = 	 "Long Beach, California, USA",
  month = 	 Jan,
  organization = "ACM",
  publisher = 	 "School of Informatics, University of
                  Edinburgh",
  anote = 	 "Electronic publication, at the URL given
                  below",
  abstract = 	 "This paper presents a formalization of
                  wildcards, which is one of the new features of
                  the Java programming language in version
                  JDK5.0. Wildcards help alleviating the
                  impedance mismatch between generics, or
                  parametric polymorphism, and traditional
                  object-oriented subtype polymorphism. They do
                  this by quantifying over parameterized types
                  with different type arguments. Wildcards take
                  inspiration from several sources including
                  use-site variance, and they could be considered
                  as a way to introduce a syntactically
                  light-weight kind of existential types into a
                  main-stream language. This formalization
                  describes the mechanism, in particular the
                  wildcard capture process where the existential
                  nature of wildcards becomes evident.",
  url = 	 "http://homepages.inf.ed.ac.uk/wadler/fool/",
  annote =         "wild-fj.pdf"
}

@Article{BBDGV18,
  author = 	 {Lorenzo Bettini and Viviana Bono and Mariangiola Dezani-Ciancaglini and Paola Giannini and Betti, Venneri},
  title = 	 {Java \& Lambda: A Featherweight Story},
  journal = 	 {Logical Methods in Computer Science},
  year = 	 {2018},
  OPTkey = 	 {},
  volume = 	 {14(3:17)},
  OPTnumber = 	 {},
  pages = 	 {1--24},
  OPTmonth = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

@inproceedings{plue17_2,
 author = {Pl\"{u}micke, Martin and Stadelmeier, Andreas},
 title = {Introducing {S}cala-like Function Types into {J}ava-{TX}},
 booktitle = {Proceedings of the 14th International Conference on Managed Languages and Runtimes},
 series = {ManLang 2017},
 year = {2017},
 isbn = {978-1-4503-5340-3},
 location = {Prague, Czech Republic},
 pages = {23--34},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/3132190.3132203},
 doi = {10.1145/3132190.3132203},
 acmid = {3132203},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Java, function types, lambda expressions, type inference},
}